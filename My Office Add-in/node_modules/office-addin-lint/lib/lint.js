// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const esLintPath = require.resolve("eslint");
const prettierPath = require.resolve("prettier");
const esLintDir = path.parse(esLintPath).dir;
const esLintFilePath = path.resolve(esLintDir, "../bin/eslint.js");
const prettierFilePath = path.resolve(prettierPath, "../bin-prettier.js");
const esLintConfigPath = path.resolve(__dirname, "../config/.eslintrc.json");
function execCommand(command) {
    const execSync = require("child_process").execSync;
    const child = execSync(command, { stdio: "inherit" });
}
function getEsLintBaseCommand() {
    const eslintBaseCommand = `node ${esLintFilePath} -c ${esLintConfigPath} --resolve-plugins-relative-to ${__dirname}`;
    return eslintBaseCommand;
}
function getLintCheckCommand(files) {
    const eslintCommand = `${getEsLintBaseCommand()} ${files}`;
    return eslintCommand;
}
exports.getLintCheckCommand = getLintCheckCommand;
function performLintCheck(files) {
    const command = getLintCheckCommand(files);
    execCommand(command);
}
exports.performLintCheck = performLintCheck;
function getLintFixCommand(files) {
    const eslintCommand = `${getEsLintBaseCommand()} --fix ${files}`;
    return eslintCommand;
}
exports.getLintFixCommand = getLintFixCommand;
function performLintFix(files) {
    const command = getLintFixCommand(files);
    execCommand(command);
}
exports.performLintFix = performLintFix;
function getPrettierCommand(files) {
    const prettierFixCommand = `node ${prettierFilePath} --parser typescript --write ${files}`;
    return prettierFixCommand;
}
exports.getPrettierCommand = getPrettierCommand;
function makeFilesPrettier(files) {
    const command = getPrettierCommand(files);
    execCommand(command);
}
exports.makeFilesPrettier = makeFilesPrettier;
//# sourceMappingURL=lint.js.map